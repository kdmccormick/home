#!/bin/bash


LAPTOP_ID=alsa_output.pci-0000_00_1f.3.analog-stereo
MON_ID=alsa_output.usb-Apple_Inc._Display_Audio_18211463-00.analog-stereo

cmd="$1"
arg="$2"

show_help() {
	echo "Usages:"
	echo "  sound help            => show this help message"
	echo "  sound                 => show master status and help message"
	echo "  sound [on|off]        => unmute/mute master"
	echo "  sound ##              => set volume (0-100)"
	echo "  sound [on|off] ##     => unmute/mute master and set volume (0-100)"
	echo "  sound laptop [off|on] => send sound to laptop; optionally mute/unmute"
	echo "  sound mon [off|on]    => send sound to monitor; optionally mute/unmute"
	echo "  sound test [##] [##]  => unmute master, set to second arg (default 25),"
	echo "                           and run speaker-test. If second arg provided,"
	echo "                           set master to that after test."
}

show_status() {
	amixer sget Master
}

case "$cmd" in
	"")
		show_help
		echo
		show_status
	;;
	on|off)
		case "$arg" in
			"")
				echo ">> toggling master mute"
				amixer set Master "$cmd"
				;;
			*\%)
				echo ">> toggling master mute and setting volume"
				amixer set Master "$cmd" "$arg"
				;;
			*)
				echo ">> toggling master mute and setting volume"
				amixer set Master "$cmd" "$arg"%
		esac
		;;
	[0-9]|[0-9][0-9]|100)
		pct="$cmd"
		echo ">> setting master volume"
		amixer set Master "$pct"%
		;;
	*\%)
		pct="$cmd"
		echo ">> setting master volume"
		amixer set Master "$pct"
		;;
	laptop)
		echo ">> muting monitor"
		pactl set-sink-mute "$MON_ID" yes || true
		echo ">> setting default sink to laptop"
		pactl set-default-sink "$LAPTOP_ID"
		echo ">> unmuting laptop"
		pactl set-sink-mute "$LAPTOP_ID" 0
		if [[ "$arg" == "off" ]]; then
			amixer set Master off
		elif [[ "$arg" == "on" ]]; then
			amixer set Master on
		else
			show_status
		fi
		;;
	mon)
		echo ">> muting laptop"
		pactl set-sink-mute "$LAPTOP_ID" yes || true
		echo ">> setting default sink to monitor"
		pactl set-default-sink "$MON_ID"
		echo ">> unmuting monitor"
		pactl set-sink-mute "$MON_ID" no
		if [[ "$arg" == "off" ]]; then
			amixer set Master off
		elif [[ "$arg" == "on" ]]; then
			amixer set Master on
		else
			show_status
		fi
		;;
	test)
		setting=25
		if [[ ! -z "$2" ]]; then
			setting="$2"
		fi
		echo ">> testing sound at ${setting}%"
		amixer set Master on "$setting"% && speaker-test
		echo ">> setting master volume"
		if [[ ! -z "$3" ]]; then
			post_setting="$3"
			amixer set Master on "$post_setting"%
		fi
		;;
	help)
		show_help
		;;
	*)
		echo ">> invalid usage"
		show_help
		exit 1
esac

exit 0
